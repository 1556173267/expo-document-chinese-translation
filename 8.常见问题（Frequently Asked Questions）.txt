常见问题
除了下面的问题，您还可以通过Expo的论坛（http://forums.expo.io/）和Hashnode的Expo AMA（https://hashnode.com/ama/with-exponent-ciw1qxry118wl4353o9kxaowl）了解更多常见问题和答案。

使用Expo需要多少钱？
Expo 是免费的。
我们的目标是无限期的保持这种方式。（无限期免费）
Expo是开源的，所以你也并不一定需要依赖我们的这个免费计划。
我们最终可能会通过在 Expo 之上建立的服务收取费用，或者提供某种高级支持和咨询服务。

如果Expo保持免费，我们如何赚钱？
直到现在，我们并没有获取任何收益。我们有一个小团队，只想努力做好Expo，我们保持低开支，大多是自筹资金。 只要有人使用Expo，我们就能一直通过这种方式来开发Expo。
我们认为，如果我们能够使 Expo 足够好，我们最终可以帮助开发商赚钱，我们可以从中获取一部分收益。 我们可以帮助他们通过用户收取费用，或者用过在他们的app里投放广告来获取费用，我们还没有一个明确的计划呢; 我们的首要任务就是让Expo变得更好，并尽可能地受到欢迎。

Expo和React Native之间有什么区别？
Expo有点像React Native的脚手架。它为您设置了很多东西，所以能帮助您更快的开始开发。
使用Expo，您不需要Xcode或Android Studio。 您只需使用您熟悉的任何文本编辑器编写JavaScript（Atom，vim，emacs，Sublime，VS Code，无论您喜欢什么）。 您可以在Mac，Windows和Linux上运行XDE（我们的桌面软件）。
以下是Expo为您提供的一些开发项目就用的到工具：

iOS 和 Android 支持
您可以直接在iOS和Android上使用在Expo中编写的应用程序。 您不需要特意为其中一个平台进行构建。 只需在iOS或Android（或PC上的iOS模拟器和安卓模拟器）中打开从应用市场下载的Expo 客户端，就可以在里面运行用Expo 创建的app。

推送通知
推送通知在iOS和Android上都可以立即使用，我们提供了统一的API。 您不必设置APNS和GCM / FCM或配置ZeroPush或类似的东西。 我们认为我们已经是它变得非常简单易用。

Facebook 登录SDK
这可能需要您花一定的时间去设置，但您应该能够在10分钟或更短时间内在Expo上使用它。

及时更新（热更新）
只需要您单击XDE中的“发布”，所有的Expo应用程序都能在几秒钟内完成远程更新。 您不需要设置任何东西，它就能这样工作。 如果您不使用Expo，则可以使用Microsoft Code Push或针对此问题推出自己的解决方案。

资源管理
使用Expo您可以让图像，视频，字体等都通过互联网动态分发。 这意味着它们可以即时更新，并且可以随时更改。 Expo内置的资源管理系统负责将您修改的所有资源上传到CDN，以便用户能够更快的加载这些资源。
没有Expo，正常的做法是将资源打包到您的APP中，这意味着您无法更改它们。 或者您必须自己将资源放在CDN或类似事务上进行管理。

很容易的更新到React Native最新版本
我们每隔几周就会发布一次新的Expo。 如果您愿意，可以使用旧版本的React Native版本，或升级到最新版本，而无需担心重建应用程序二进制文件。 你需要关心是，什么时候更新您的JavaScript代码。

但是没有原生模块
关于Expo的最大限制是，如果不拆分和使用ExpoKit，就无法添加自己的原生模块。 继续阅读下一个问题以获得完整的解释。

我怎么给我的Expo项目添加自定义的原生代码？
您可以这么做，但是大多数人都不需要这么做。
标准Expo项目不支持自定义原生代码，包括原生的第三方库。 在Expo项目中，您只能编写纯JS。 Expo是按照这种方式设计的，我们认为这样做更好。
在我们的SDK中，我们为您提供了大量常用的高质量原生模块。 我们建议尽可能多地使用JS，因为它可以立即更新给所有正在使用您App的用户，包括iOS端和安卓端，并且将始终继续受益于Expo SDK更新。 特别是在写UI组件的时候，都用JS来编写是更好的选择。
但是，如果你必须要自定义一些原生的模块 - 比如即时视频处理或对控制低能耗蓝牙来进行固件更新 - 我们提供了预览版本，可以在原生Xcode和Android Studio项目中使用Expo。

Expo 与用于网页开发的React相似吗？
Expo和React Native与React是有很大相似性的。 但是你必须学习新的UI组件（例如View而不是div），而且编写移动应用程序与网站有很大的区别; 你会考虑不同的视图在控制器之间的跳转，而不是单个的网页，但是如果你正在编写原生的Android或iOS应用程序，那么你要掌握的知识将会更多。

我如何分享我的Expo项目？ 我可以将它提交到应用商店吗？
分享您的Expo项目的最快方式是发布它。 您可以通过单击XDE中的“发布”或在项目中运行exp publish来完成此操作。 这会为您的应用提供一个网址; 您可以分享此链接与拥有适用于Android的Expo客户端，他们可以立即打开您的应用。 点击阅读更多关于发布的功能（https://blog.expo.io/publishing-on-exponent-790493660d24） 如果要分享给iOS用户使用，您可以使用Apple TestFlight。
准备好后，您可以创建一个独立的应用程序（.ipa和.apk），以便提交给Apple和Google的应用程序商店。 当您运行命令时，Expo将为您构建二进制文件; 请参阅构建独立应用程序。（https://docs.expo.io/versions/v28.0.0/guides/building-standalone-apps.html#building-standalone-apps） 想要在App Store中发布您的应用程序，您需要购买99美元的个人账号或99美元的公司账号或199美元的企业账号，如果要在Google Play商店上架，每次得支付25美元费用。

为什么Expo使用的是React Native的分支
每个Expo SDK版本都对应一个React Native版本。 例如，SDK 19对应于React Native 0.46.1。 对于给定的fork过来的SDK版本及其相应的React Native版本，两者之间通常没有区别，但是有的时候我们会把发现的问题或一些想要合并但是未合并的代码，都放入到我们fork出来的代码中去。使用 fork 出来的分支 还可以让人们更容易的验证他们是否正在使用适用于Expo SDK版本的React Native版本。如果您的SDK版本设置为19.0.0，那么您应该使用https://github.com/expo/react-native/archive/sdk-19.0.0.tar.gz.

如何使用Expo运行现有的React Native项目？
现在，最简单的方法是使用XDE或exp创建一个新项目，然后从现有项目中复制所有JavaScript源代码，然后再使用yarn add添加依赖库。
如果您用了某个Expo SDK开源的原生依赖库，则此过程应该不会超过几分钟（不包括npm安装时间）。 如果您遇到任何问题，请随时向我们提问。
如果您使用了Expo SDK不支持的原生库，那么您需要把这部分原生库改成Expo提供的类似功能的原生API，否则您原先项目的某些功能可能无法正常工作， 但是大部分都是可以的。
注： 我们曾经维护过一个exp转换工具,但它现在已经无法正常工作，并且处于没人维护的状态，所以上面的方法是让现有的React Native项目在Expo上运行的最好方法。

如何删除我发布的Expo项目？
Expo应用的默认隐私设置是不公开给所有人的，因此除非您把项目链接发送给别人，否则任何人都无法找到您的应用。
如果您确实希望发布的应用程序 变成 未发布的状态，请查看我们的高级发布渠道指南（https://docs.expo.io/versions/v28.0.0/guides/advanced-release-channels.html），其中介绍了如何回滚。

什么是Exponent，它与Expo有什么不同？
Exponent是Expo项目的原始名称。 您可能偶尔会在博客文章或代码或文档中遇到一些旧的引用。 他们是一样的东西,我们只是缩短了名字。

Expo应用程序支持哪些版本的Android和iOS？
Expo应用程序支持在安卓 4.4和iOS 9以上的设备上运行。

我可以在Expo上使用Node.js包吗？
如果程序包依赖于Node标准库API，则无法将其与Expo一起使用。 Node标准库是一组主要在C ++中实现的功能，它将函数公开给不属于JavaScript语言规范的JavaScript，例如读写文件系统的能力。 React Native，并且通过扩展Expo，不包括Node标准库，就像Chrome和Firefox不包含它一样。 JavaScript是一种在许多环境中使用的语言，从移动应用程序（在我们的例子中）到服务器，当然还有在网站上。这些上下文都包含它们自己的运行时环境，它们向JavaScript公开不同的API，具体取决于上下文中有意义的内容。
作为旁注，一些Node标准库API不依赖于C ++扩展，而是可以直接在JavaScript中实现，例如url和assert。如果您希望使用的程序包仅依赖于这些Node API，则可以从npm安装它们，该程序包将起作用。

我可以同时使用Relay和Expo吗？
你可以。只要在新的Expo 项目中 修改您的.babelrc文件中的内容：
	{
	  "presets": [
	    "babel-preset-expo",
	    {"plugins": ["./pathToYourBabelRelayPlugin/babelRelayPlugin"]}
	  ],
	  "env": {
	    "development": {
	      "plugins": ["transform-react-jsx-source"]
	    }
	  }
	};
将上面的 ./pathToYourBabelRelayPlugin替换为Relay插件的路径。





